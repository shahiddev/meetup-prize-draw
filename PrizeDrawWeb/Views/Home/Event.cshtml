@model PrizeDrawWeb.Models.Home.EventViewModel
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Event!";
    Layout = null;
    var animationDurationMs = 750;
    var iterationCount = 10;
}
<!DOCTYPE html>
<html>

<head>
    <title>Prize Draw</title>
    <style>
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
        }

        #presenter{
            position: absolute;
            top:0;
            left:0;
            height: 100%;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            font-family: 'Courier New', Courier, monospace;
        }
        #container {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            font-family: 'Courier New', Courier, monospace;
            font-weight: bold;
            font-size: 2em;
        }
        .row {
            height: @Model.RowHeight%;
            margin: 0;
            padding: 0;
        }
        .cell {
            display: inline-block;
            width: @Model.CellWidth%;
            height: 100%;
            margin: 0;
            padding: 0;
            position: relative;
            text-align: center;
        }
        .cell.selected {
            z-index: 99999;
            overflow: visible;
            animation-name: stretch;
            animation-duration: @(animationDurationMs)ms;
            animation-timing-function: ease-out;
            animation-delay: 0;
            animation-direction: alternate;
            animation-iteration-count: 1;
            animation-fill-mode: none;
            animation-play-state: running;
        }
        @@keyframes stretch {
            0% {
                transform: scale(1);
            }
            60% {
                transform: scale(1.25);
            }
            100% {
                transform: scale(1);
            }
        }
        .cell.selected.final{
            transform: scale(2);
        }
        .cell.dim {
            background-color: white !important;
            color: lightgrey !important;
            -webkit-transition: background-color 1000ms linear;
            -ms-transition: background-color 1000ms linear;
            transition: background-color 1000ms linear;
        }

        .cell .image{
            overflow:hidden;
            height: 100%;
            width:100%;
            position: absolute;
        }
        .cell .image img{
            max-height:100%;
            max-width:100%;
            overflow:hidden
        }
        .cell .name{
            width:100%;
            height: 1em;
            position: absolute;
            top:80%;
            background-color: rgba(255, 255, 255, 0.5);
        }
        .hidden{
            visibility: hidden;
        }
    </style>
</head>

<body>
    <div id="container">
        @foreach (var row in Model.Rsvps)
        {
            <div class="row">
                @*@foreach (var cell in row) {<div class="cell @cell.Colour"><div class="image"><img style="max-height:100%;max-width:100%;overflow:hidden" src="@cell.ImageUrl" /></div><div class="name">@cell.Display</div></div>}*@
                @foreach (var cell in row)
                {<div class="cell" style="background-color:@cell.Colour" data-rsvp="@cell.RsvpInfo"><div class="image"><img class="hidden" src="@(@cell.ImageUrl?? "/person.png")" /></div><div class="name">@cell.Display</div></div>}
            </div>
        }
    </div>
    <div id="presenter" class="hidden">
        <h1>Presenter View :-)</h1>
        <h2>Winners</h2>
        <div id="winners"></div>
        <h2>Options</h2>
        <div>
            <div>Slack webhook Url: <input type="text" id="SlackWebhookUrl" size="80" /></div>
            <button id="options-save" onclick="saveOptions()">Save</button>
        </div>
    </div>

    <script>
        var serverWebhookUrl = "@Configuration["PrizeDrawWeb_SlackApiUri"]"
        const NUMBER_OF_ITERATIONS = @iterationCount;
        const ANIMATION_DURATION = @animationDurationMs; // this should match the CSS animation duration :-)
    </script>
    <script src="/js/event.js"></script>
</body>

</html>